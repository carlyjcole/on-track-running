{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport Stats from '../pages/Stats';\nimport axios from 'axios';\n\n// const FetchDataFromStrava = ({ userId }) => {\n//   const [activities, setActivities] = useState([]);\n//   const [selectedYear, setSelectedYear] = useState(new Date().getFullYear()); \n//   const clientID = 120096;\n//   const clientSecret = 'bc3ec467a7464ae5be9fc7a7f6cc69f126945851';\n//   const refreshToken = 'f545ac531dd1373ffca07f31d543f2e197810468';\n//   const auth_link = \"https://www.strava.com/oauth/token\";\n//   const activities_link = \"https://www.strava.com/api/v3/athlete/activities\";\n//   const perPage = 200; \n//   let i = 1; \n\n//   useEffect(() => {\n\n//     const delay = (ms) => new Promise(res => setTimeout(res, ms));\n\n//     const fetchData = async (page = 1) => {\n//       try {\n//         const stravaAuthResponse = await axios.post(`${auth_link}?client_id=${clientID}&client_secret=${clientSecret}&refresh_token=${refreshToken}&grant_type=refresh_token`);\n//         const accessToken = stravaAuthResponse.data.access_token;\n//         const stravaActivityResponse = await axios.get(`${activities_link}?access_token=${accessToken}&page=${page}&per_page=${perPage}`);\n//         const newActivities = stravaActivityResponse.data;\n\n//         setActivities(prevActivities => [...prevActivities, ...newActivities]);\n\n//         if (newActivities.length === perPage) {\n//           fetchData(page + 1);\n//         }\n\n//       } catch (error) {\n//         if (error.response && error.response.status === 429) {\n//           const waitTime = Math.pow(2, i) * 1000; \n//           console.log(`Rate limited. Retrying in ${waitTime / 1000} seconds...`);\n//           await delay(waitTime);\n//           i++; \n//           fetchData(page);\n//         } else {\n//           console.error('Error fetching data:', error);\n//         }\n//       }\n//     };\n//     fetchData();\n//   }, []); \n\n//   return (\n//       <div>\n//         <Stats userId={ userId } activities={ activities } />\n//       </div>\n//     );\n// };\n\n// export default FetchDataFromStrava;","map":{"version":3,"names":["React","useState","useEffect","Stats","axios"],"sources":["/Users/carlycole/personal-projects/on-track/frontend/src/components/FetchDataFromStrava.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Stats from '../pages/Stats'\nimport axios from 'axios';\n\n// const FetchDataFromStrava = ({ userId }) => {\n//   const [activities, setActivities] = useState([]);\n//   const [selectedYear, setSelectedYear] = useState(new Date().getFullYear()); \n//   const clientID = 120096;\n//   const clientSecret = 'bc3ec467a7464ae5be9fc7a7f6cc69f126945851';\n//   const refreshToken = 'f545ac531dd1373ffca07f31d543f2e197810468';\n//   const auth_link = \"https://www.strava.com/oauth/token\";\n//   const activities_link = \"https://www.strava.com/api/v3/athlete/activities\";\n//   const perPage = 200; \n//   let i = 1; \n\n//   useEffect(() => {\n\n//     const delay = (ms) => new Promise(res => setTimeout(res, ms));\n\n//     const fetchData = async (page = 1) => {\n//       try {\n//         const stravaAuthResponse = await axios.post(`${auth_link}?client_id=${clientID}&client_secret=${clientSecret}&refresh_token=${refreshToken}&grant_type=refresh_token`);\n//         const accessToken = stravaAuthResponse.data.access_token;\n//         const stravaActivityResponse = await axios.get(`${activities_link}?access_token=${accessToken}&page=${page}&per_page=${perPage}`);\n//         const newActivities = stravaActivityResponse.data;\n\n//         setActivities(prevActivities => [...prevActivities, ...newActivities]);\n\n//         if (newActivities.length === perPage) {\n//           fetchData(page + 1);\n//         }\n\n//       } catch (error) {\n//         if (error.response && error.response.status === 429) {\n//           const waitTime = Math.pow(2, i) * 1000; \n//           console.log(`Rate limited. Retrying in ${waitTime / 1000} seconds...`);\n//           await delay(waitTime);\n//           i++; \n//           fetchData(page);\n//         } else {\n//           console.error('Error fetching data:', error);\n//         }\n//       }\n//     };\n//     fetchData();\n//   }, []); \n\n//   return (\n//       <div>\n//         <Stats userId={ userId } activities={ activities } />\n//       </div>\n//     );\n// };\n\n// export default FetchDataFromStrava;\n\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}