{"ast":null,"code":"var _jsxFileName = \"/Users/carlycole/personal-projects/on-track/frontend/src/components/FetchDataFromStrava.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Stats from '../pages/Stats';\nimport axios from 'axios';\nimport { Dialog, Transition } from '@headlessui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchDataFromStrava = () => {\n  _s();\n  console.log(\"fetching\");\n  const [activities, setActivities] = useState([]);\n  const [selectedYear] = useState(new Date().getFullYear());\n  let [isOpen, setIsOpen] = useState(false);\n  function closeModal() {\n    setIsOpen(false);\n  }\n  function openModal() {\n    setIsOpen(true);\n  }\n  const authorizeWithStrava = async () => {\n    const response = await axios.post('http://localhost:4000/strava/auth');\n    console.log(\"authorization\");\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/strava/activities');\n        const newActivities = response.data.activities;\n        console.log(\"Strava API Response:\", newActivities);\n        setActivities(prevActivities => [...prevActivities, ...newActivities]);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setIsOpen(true);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Stats, {\n      year: selectedYear,\n      activities: activities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n_s(FetchDataFromStrava, \"L5k4vRucu1CoDyfEQHH1qAZcLEs=\");\n_c = FetchDataFromStrava;\nexport default FetchDataFromStrava;\nvar _c;\n$RefreshReg$(_c, \"FetchDataFromStrava\");","map":{"version":3,"names":["React","useState","useEffect","Stats","axios","Dialog","Transition","jsxDEV","_jsxDEV","FetchDataFromStrava","_s","console","log","activities","setActivities","selectedYear","Date","getFullYear","isOpen","setIsOpen","closeModal","openModal","authorizeWithStrava","response","post","fetchData","get","newActivities","data","prevActivities","error","children","year","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carlycole/personal-projects/on-track/frontend/src/components/FetchDataFromStrava.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Stats from '../pages/Stats'\nimport axios from 'axios';\nimport { Dialog, Transition } from '@headlessui/react'; \n\nconst FetchDataFromStrava = () => {\n  console.log(\"fetching\"); \n  const [activities, setActivities] = useState([]);\n  const [selectedYear] = useState(new Date().getFullYear()); \n  let [isOpen, setIsOpen] = useState(false); \n\n  function closeModal() {\n    setIsOpen(false)\n  }\n\n  function openModal() {\n    setIsOpen(true)\n  }\n\n  const authorizeWithStrava = async () => {\n    const response = await axios.post('http://localhost:4000/strava/auth');\n    console.log(\"authorization\"); \n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/strava/activities');\n        const newActivities = response.data.activities;\n\n        console.log(\"Strava API Response:\", newActivities);\n\n        setActivities(prevActivities => [...prevActivities, ...newActivities]);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setIsOpen(true); \n      }\n    };\n\n    fetchData();\n  }, []); \n  \n  return (\n      <div>\n        <Stats year={selectedYear} activities={activities} />\n      </div>\n    );\n};\n\nexport default FetchDataFromStrava;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,UAAU,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChCC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAIe,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;EACzD,IAAI,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEzC,SAASmB,UAAUA,CAAA,EAAG;IACpBD,SAAS,CAAC,KAAK,CAAC;EAClB;EAEA,SAASE,SAASA,CAAA,EAAG;IACnBF,SAAS,CAAC,IAAI,CAAC;EACjB;EAEA,MAAMG,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,mCAAmC,CAAC;IACtEb,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC9B,CAAC;EAEDV,SAAS,CAAC,MAAM;IACd,MAAMuB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMF,QAAQ,GAAG,MAAMnB,KAAK,CAACsB,GAAG,CAAC,yCAAyC,CAAC;QAC3E,MAAMC,aAAa,GAAGJ,QAAQ,CAACK,IAAI,CAACf,UAAU;QAE9CF,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEe,aAAa,CAAC;QAElDb,aAAa,CAACe,cAAc,IAAI,CAAC,GAAGA,cAAc,EAAE,GAAGF,aAAa,CAAC,CAAC;MACxE,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdnB,OAAO,CAACmB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CX,SAAS,CAAC,IAAI,CAAC;MACjB;IACF,CAAC;IAEDM,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIjB,OAAA;IAAAuB,QAAA,eACEvB,OAAA,CAACL,KAAK;MAAC6B,IAAI,EAAEjB,YAAa;MAACF,UAAU,EAAEA;IAAW;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEZ,CAAC;AAAC1B,EAAA,CA1CID,mBAAmB;AAAA4B,EAAA,GAAnB5B,mBAAmB;AA4CzB,eAAeA,mBAAmB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}