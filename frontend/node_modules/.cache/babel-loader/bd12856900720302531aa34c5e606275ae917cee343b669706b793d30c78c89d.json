{"ast":null,"code":"var _jsxFileName = \"/Users/carlycole/personal-projects/on-track/frontend/src/components/HeartRateChart.js\";\nimport * as React from 'react';\nimport { BarChart } from '@mui/x-charts/BarChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chartSetting = {\n  xAxis: [{\n    label: 'heart rate (bpm)'\n  }],\n  width: 500,\n  height: 400\n};\nconst valueFormatter = value => `${value} bpm`;\nconst HeartRateChart = ({\n  activities\n}) => {\n  console.log(activities);\n  const paceCategories = [{\n    label: '7:00-7:30',\n    minPace: 3.5,\n    maxPace: 3.7\n  }, {\n    label: '7:30-8:00',\n    minPace: 3.8,\n    maxPace: 3.3\n  }, {\n    label: '8:00-8:30',\n    minPace: 3.4,\n    maxPace: 510\n  }, {\n    label: '8:30-9:00',\n    minPace: 510,\n    maxPace: 540\n  }, {\n    label: '9:00-9:30',\n    minPace: 540,\n    maxPace: 570\n  }, {\n    label: '9:30-10:00',\n    minPace: 570,\n    maxPace: 600\n  }];\n  const dataset = paceCategories.map(category => {\n    const filteredActivities = activities.filter(activity => {\n      const pace = activity.average_speed;\n      console.log('pace:', pace);\n      return pace >= category.minPace && pace < category.maxPace;\n    });\n    console.log('Filtered Activities:', filteredActivities);\n    console.log('filtered length:', filteredActivities.length);\n    const averageHeartRate = filteredActivities.reduce((total, activity) => {\n      console.log('Activity Heart Rate:', activity.heartrate);\n      return total + activity.heartrate;\n    }, 0) / filteredActivities.length;\n    console.log('Average Heart Rate:', averageHeartRate);\n    return {\n      paceCategory: category.label,\n      heartrate: averageHeartRate\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      dataset: dataset,\n      yAxis: [{\n        scaleType: 'band',\n        dataKey: 'paceCategory'\n      }],\n      xAxis: [{\n        scaleType: 'band'\n      }],\n      series: [{\n        dataKey: 'heartrate',\n        valueFormatter,\n        color: 'rgb(217, 229, 238)'\n      }],\n      layout: \"horizontal\",\n      ...chartSetting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c = HeartRateChart;\nexport default HeartRateChart;\nvar _c;\n$RefreshReg$(_c, \"HeartRateChart\");","map":{"version":3,"names":["React","BarChart","jsxDEV","_jsxDEV","chartSetting","xAxis","label","width","height","valueFormatter","value","HeartRateChart","activities","console","log","paceCategories","minPace","maxPace","dataset","map","category","filteredActivities","filter","activity","pace","average_speed","length","averageHeartRate","reduce","total","heartrate","paceCategory","children","yAxis","scaleType","dataKey","series","color","layout","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carlycole/personal-projects/on-track/frontend/src/components/HeartRateChart.js"],"sourcesContent":["import * as React from 'react';\nimport { BarChart } from '@mui/x-charts/BarChart';\n\nconst chartSetting = {\n  xAxis: [\n    {\n      label: 'heart rate (bpm)',\n    },\n  ],\n  width: 500,\n  height: 400,\n};\n\nconst valueFormatter = (value) => `${value} bpm`;\n\nconst HeartRateChart = ({ activities }) => {\n  console.log(activities);\n\n  const paceCategories = [\n    { label: '7:00-7:30', minPace: 3.5, maxPace: 3.7 },\n    { label: '7:30-8:00', minPace: 3.8, maxPace: 3.3 },\n    { label: '8:00-8:30', minPace: 3.4, maxPace: 510 },\n    { label: '8:30-9:00', minPace: 510, maxPace: 540 },\n    { label: '9:00-9:30', minPace: 540, maxPace: 570 },\n    { label: '9:30-10:00', minPace: 570, maxPace: 600 },\n  ];\n\n  const dataset = paceCategories.map(category => {\n    const filteredActivities = activities.filter(activity => {\n      const pace = activity.average_speed;\n      console.log('pace:', pace);\n      return pace >= category.minPace && pace < category.maxPace;\n    });\n\n    console.log('Filtered Activities:', filteredActivities);\n    console.log('filtered length:', filteredActivities.length); \n  \n    const averageHeartRate = filteredActivities.reduce((total, activity) => {\n      console.log('Activity Heart Rate:', activity.heartrate);\n      return total + activity.heartrate;\n    }, 0) / filteredActivities.length;\n\n    console.log('Average Heart Rate:', averageHeartRate);\n\n    return {\n      paceCategory: category.label,\n      heartrate: averageHeartRate,\n    };\n  });\n\n  return ( \n    <div>\n      <BarChart\n        dataset={dataset}\n        yAxis={[{ scaleType: 'band', dataKey: 'paceCategory' }]}\n        xAxis={[{ scaleType: 'band' }]}\n        series={[{ dataKey: 'heartrate', valueFormatter, color: 'rgb(217, 229, 238)' }]}\n        layout=\"horizontal\"\n        {...chartSetting}\n      />\n    </div>\n  );\n};\n\nexport default HeartRateChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}