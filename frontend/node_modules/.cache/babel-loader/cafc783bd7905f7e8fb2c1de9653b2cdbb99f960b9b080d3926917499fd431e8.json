{"ast":null,"code":"var _jsxFileName = \"/Users/carlycole/personal-projects/on-track/frontend/src/components/FetchDataFromStrava.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Stats from '../pages/Stats';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchDataFromStrava = props => {\n  _s();\n  const [activities, setActivities] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const clientID = 120096;\n  const clientSecret = 'bc3ec467a7464ae5be9fc7a7f6cc69f126945851';\n  const refreshToken = 'f545ac531dd1373ffca07f31d543f2e197810468';\n  const auth_link = \"https://www.strava.com/oauth/token\";\n  const activities_link = \"https://www.strava.com/api/v3/athlete/activities\";\n  const perPage = 200;\n  let i = 1;\n  useEffect(() => {\n    const delay = ms => new Promise(res => setTimeout(res, ms));\n    const fetchData = async (page = 1) => {\n      try {\n        const stravaAuthResponse = await axios.post(`${auth_link}?client_id=${clientID}&client_secret=${clientSecret}&refresh_token=${refreshToken}&grant_type=refresh_token`);\n        const accessToken = stravaAuthResponse.data.access_token;\n        const stravaActivityResponse = await axios.get(`${activities_link}?access_token=${accessToken}&page=${page}&per_page=${perPage}`);\n        const newActivities = stravaActivityResponse.data;\n        setActivities(prevActivities => [...prevActivities, ...newActivities]);\n        if (newActivities.length === perPage) {\n          fetchData(page + 1);\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 429) {\n          const waitTime = Math.pow(2, i) * 1000;\n          console.log(`Rate limited. Retrying in ${waitTime / 1000} seconds...`);\n          await delay(waitTime);\n          i++;\n          fetchData(page);\n        } else {\n          console.error('Error fetching data:', error);\n        }\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Stats, {\n      userId: props.location && props.location.state.userId,\n      activities: activities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n};\n_s(FetchDataFromStrava, \"RhGQGncKXFaM8MgBZSAVbeVaYWg=\");\n_c = FetchDataFromStrava;\nexport default FetchDataFromStrava;\n\n// const FetchDataFromStrava = () => {\n//   console.log(\"fetching\"); \n//   const [activities, setActivities] = useState([]);\n//   const [selectedYear] = useState(new Date().getFullYear()); \n//   let [isOpen, setIsOpen] = useState(false); \n\n//   function closeModal() {\n//     setIsOpen(false)\n//   }\n\n//   function openModal() {\n//     setIsOpen(true)\n//   }\n\n//   const authorizeWithStrava = async () => {\n//     // const response = await axios.post('http://localhost:4000/strava/auth');\n//     closeModal(); \n//     console.log(\"authorization\"); \n//   };\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:4000/strava/activities');\n//         const newActivities = response.data.activities;\n\n//         console.log(\"Strava API Response:\", newActivities);\n\n//         setActivities(prevActivities => [...prevActivities, ...newActivities]);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//         openModal(); \n//       }\n//     };\n\n//     fetchData();\n//   }, []); \n\n//   return (\n//       <div>\n//         <div className=\"fixed inset-0 flex items-center justify-center\" style={{ pointerEvents: 'none' }}>\n\n//         <Transition appear show={isOpen} as={Fragment}>\n//           <Dialog as=\"div\" className=\"relative z-10\" onClose={closeModal}>\n//             <Transition.Child\n//               as={Fragment}\n//               enter=\"ease-out duration-300\"\n//               enterFrom=\"opacity-0\"\n//               enterTo=\"opacity-100\"\n//               leave=\"ease-in duration-200\"\n//               leaveFrom=\"opacity-100\"\n//               leaveTo=\"opacity-0\"\n//             >\n//               <div className=\"fixed inset-0 bg-black/25\" />\n//             </Transition.Child>\n\n//               <div className=\"fixed inset-0 overflow-y-auto\">\n//                 <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n//                   <Transition.Child\n//                     as={Fragment}\n//                     enter=\"ease-out duration-300\"\n//                     enterFrom=\"opacity-0 scale-95\"\n//                     enterTo=\"opacity-100 scale-100\"\n//                     leave=\"ease-in duration-200\"\n//                     leaveFrom=\"opacity-100 scale-100\"\n//                     leaveTo=\"opacity-0 scale-95\"\n//                   >\n//                     <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all\">\n//                       <Dialog.Title\n//                         as=\"h3\"\n//                         className=\"text-lg font-medium leading-6 text-gray-900\"\n//                       >\n//                         uh oh!\n//                       </Dialog.Title>\n//                       <div className=\"mt-2\">\n//                         <p className=\"text-sm text-gray-500\">\n//                           you'll need to give us permission to use your data from strava.\n//                         </p>\n//                       </div>\n\n//                       <div className=\"mt-4\">\n//                         <button\n//                           type=\"button\"\n//                           className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-100 px-4 py-2 text-sm font-medium text-blue-900 hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2\"\n//                           onClick={authorizeWithStrava}>\n//                           let's go\n//                         </button>\n//                       </div>\n//                     </Dialog.Panel>\n//                   </Transition.Child>\n//                 </div>\n//               </div>\n//             </Dialog>\n//             </Transition>\n//             </div>\n//           <Stats year={selectedYear} activities={activities} />\n//         </div>\n//     );\n// };\n\n// export default FetchDataFromStrava;\nvar _c;\n$RefreshReg$(_c, \"FetchDataFromStrava\");","map":{"version":3,"names":["React","useState","useEffect","Stats","axios","jsxDEV","_jsxDEV","FetchDataFromStrava","props","_s","activities","setActivities","selectedYear","setSelectedYear","Date","getFullYear","clientID","clientSecret","refreshToken","auth_link","activities_link","perPage","i","delay","ms","Promise","res","setTimeout","fetchData","page","stravaAuthResponse","post","accessToken","data","access_token","stravaActivityResponse","get","newActivities","prevActivities","length","error","response","status","waitTime","Math","pow","console","log","children","userId","location","state","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carlycole/personal-projects/on-track/frontend/src/components/FetchDataFromStrava.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Stats from '../pages/Stats'\nimport axios from 'axios';\n\nconst FetchDataFromStrava = (props) => {\n  const [activities, setActivities] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear()); \n  const clientID = 120096;\n  const clientSecret = 'bc3ec467a7464ae5be9fc7a7f6cc69f126945851';\n  const refreshToken = 'f545ac531dd1373ffca07f31d543f2e197810468';\n  const auth_link = \"https://www.strava.com/oauth/token\";\n  const activities_link = \"https://www.strava.com/api/v3/athlete/activities\";\n  const perPage = 200; \n  let i = 1; \n\n  useEffect(() => {\n\n    const delay = (ms) => new Promise(res => setTimeout(res, ms));\n\n    const fetchData = async (page = 1) => {\n      try {\n        const stravaAuthResponse = await axios.post(`${auth_link}?client_id=${clientID}&client_secret=${clientSecret}&refresh_token=${refreshToken}&grant_type=refresh_token`);\n        const accessToken = stravaAuthResponse.data.access_token;\n        const stravaActivityResponse = await axios.get(`${activities_link}?access_token=${accessToken}&page=${page}&per_page=${perPage}`);\n        const newActivities = stravaActivityResponse.data;\n\n        setActivities(prevActivities => [...prevActivities, ...newActivities]);\n\n        if (newActivities.length === perPage) {\n          fetchData(page + 1);\n        }\n\n      } catch (error) {\n        if (error.response && error.response.status === 429) {\n          const waitTime = Math.pow(2, i) * 1000; \n          console.log(`Rate limited. Retrying in ${waitTime / 1000} seconds...`);\n          await delay(waitTime);\n          i++; \n          fetchData(page);\n        } else {\n          console.error('Error fetching data:', error);\n        }\n      }\n    };\n    fetchData();\n  }, []); \n\n  return (\n      <div>\n        <Stats userId={props.location && props.location.state.userId} activities={activities}/>\n      </div>\n    );\n};\n\nexport default FetchDataFromStrava;\n\n// const FetchDataFromStrava = () => {\n//   console.log(\"fetching\"); \n//   const [activities, setActivities] = useState([]);\n//   const [selectedYear] = useState(new Date().getFullYear()); \n//   let [isOpen, setIsOpen] = useState(false); \n\n//   function closeModal() {\n//     setIsOpen(false)\n//   }\n\n//   function openModal() {\n//     setIsOpen(true)\n//   }\n\n//   const authorizeWithStrava = async () => {\n//     // const response = await axios.post('http://localhost:4000/strava/auth');\n//     closeModal(); \n//     console.log(\"authorization\"); \n//   };\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:4000/strava/activities');\n//         const newActivities = response.data.activities;\n\n//         console.log(\"Strava API Response:\", newActivities);\n\n//         setActivities(prevActivities => [...prevActivities, ...newActivities]);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//         openModal(); \n//       }\n//     };\n\n//     fetchData();\n//   }, []); \n  \n//   return (\n//       <div>\n//         <div className=\"fixed inset-0 flex items-center justify-center\" style={{ pointerEvents: 'none' }}>\n\n//         <Transition appear show={isOpen} as={Fragment}>\n//           <Dialog as=\"div\" className=\"relative z-10\" onClose={closeModal}>\n//             <Transition.Child\n//               as={Fragment}\n//               enter=\"ease-out duration-300\"\n//               enterFrom=\"opacity-0\"\n//               enterTo=\"opacity-100\"\n//               leave=\"ease-in duration-200\"\n//               leaveFrom=\"opacity-100\"\n//               leaveTo=\"opacity-0\"\n//             >\n//               <div className=\"fixed inset-0 bg-black/25\" />\n//             </Transition.Child>\n\n//               <div className=\"fixed inset-0 overflow-y-auto\">\n//                 <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n//                   <Transition.Child\n//                     as={Fragment}\n//                     enter=\"ease-out duration-300\"\n//                     enterFrom=\"opacity-0 scale-95\"\n//                     enterTo=\"opacity-100 scale-100\"\n//                     leave=\"ease-in duration-200\"\n//                     leaveFrom=\"opacity-100 scale-100\"\n//                     leaveTo=\"opacity-0 scale-95\"\n//                   >\n//                     <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all\">\n//                       <Dialog.Title\n//                         as=\"h3\"\n//                         className=\"text-lg font-medium leading-6 text-gray-900\"\n//                       >\n//                         uh oh!\n//                       </Dialog.Title>\n//                       <div className=\"mt-2\">\n//                         <p className=\"text-sm text-gray-500\">\n//                           you'll need to give us permission to use your data from strava.\n//                         </p>\n//                       </div>\n\n//                       <div className=\"mt-4\">\n//                         <button\n//                           type=\"button\"\n//                           className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-100 px-4 py-2 text-sm font-medium text-blue-900 hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2\"\n//                           onClick={authorizeWithStrava}>\n//                           let's go\n//                         </button>\n//                       </div>\n//                     </Dialog.Panel>\n//                   </Transition.Child>\n//                 </div>\n//               </div>\n//             </Dialog>\n//             </Transition>\n//             </div>\n//           <Stats year={selectedYear} activities={activities} />\n//         </div>\n//     );\n// };\n\n// export default FetchDataFromStrava;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}