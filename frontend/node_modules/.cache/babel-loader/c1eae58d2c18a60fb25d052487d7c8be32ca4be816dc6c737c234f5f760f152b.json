{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nconst App = () => {\n  _s();\n  const [accessToken, setAccessToken] = useState('');\n  const [runningData, setRunningData] = useState([]);\n  const navigate = useNavigate();\n  const clientID = 120096;\n  const clientSecret = 'bc3ec467a7464ae5be9fc7a7f6cc69f126945851';\n  const refreshToken = 'f545ac531dd1373ffca07f31d543f2e197810468';\n  const auth_link = \"https://www.strava.com/oauth/token\";\n  const activities_link = `https://www.strava.com/api/v3/athlete/activities`;\n  useEffect(() => {\n    async function fetchData() {\n      const stravaAuthResponse = await axios.all([axios.post(`${auth_link}?client_id=${clientID}&client_secret=${clientSecret}&refresh_token=${refreshToken}&grant_type=refresh_token`)]);\n      const stravaActivityResponse = await axios.get(`${activities_link}?access_token=${stravaAuthResponse[0].data.access_token}`);\n      console.log(stravaActivityResponse);\n    }\n    fetchData();\n  }, []);\n};\n//   return (\n//     <div className=\"App\">\n//       <h1>on track</h1>\n//       {accessToken ? (\n//         <div>\n//           <p>Authenticated!</p>\n//           {/* Display running stats or other content */}\n//           <ul>\n//             {runningData.map((activity) => (\n//               <li key={activity.id}>\n//                 <p>Date: {activity.start_date_local}</p>\n//                 <p>Distance: {activity.distance} meters</p>\n//                 {/* Add more details as needed */}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       ) : (\n//         <div>\n//           <p>Not authenticated. Please login to fetch Strava data.</p>\n//           <button onClick={handleLogin}>Login with Strava</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n_s(App, \"j5kUS+hNadn/qslkUxqOadeWCa0=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","App","_s","accessToken","setAccessToken","runningData","setRunningData","navigate","clientID","clientSecret","refreshToken","auth_link","activities_link","fetchData","stravaAuthResponse","all","post","stravaActivityResponse","get","data","access_token","console","log","_c","$RefreshReg$"],"sources":["/Users/carlycole/personal-projects/on-track/on-track/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const [accessToken, setAccessToken] = useState('');\n  const [runningData, setRunningData] = useState([]);\n  const navigate = useNavigate();\n  const clientID = 120096;\n  const clientSecret = 'bc3ec467a7464ae5be9fc7a7f6cc69f126945851';\n  const refreshToken = 'f545ac531dd1373ffca07f31d543f2e197810468'; \n  const auth_link = \"https://www.strava.com/oauth/token\"\n  const activities_link = `https://www.strava.com/api/v3/athlete/activities`\n\n  useEffect(() => {\n    async function fetchData() {\n      const stravaAuthResponse = await axios.all([\n        axios.post(`${auth_link}?client_id=${clientID}&client_secret=${clientSecret}&refresh_token=${refreshToken}&grant_type=refresh_token`)\n      ]);\n      const stravaActivityResponse = await axios.get(`${activities_link}?access_token=${stravaAuthResponse[0].data.access_token}`);\n      console.log(stravaActivityResponse)\n    }\n    fetchData();\n  }, []);\n}\n//   return (\n//     <div className=\"App\">\n//       <h1>on track</h1>\n//       {accessToken ? (\n//         <div>\n//           <p>Authenticated!</p>\n//           {/* Display running stats or other content */}\n//           <ul>\n//             {runningData.map((activity) => (\n//               <li key={activity.id}>\n//                 <p>Date: {activity.start_date_local}</p>\n//                 <p>Distance: {activity.distance} meters</p>\n//                 {/* Add more details as needed */}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       ) : (\n//         <div>\n//           <p>Not authenticated. Please login to fetch Strava data.</p>\n//           <button onClick={handleLogin}>Login with Strava</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAElB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMU,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAG,MAAM;EACvB,MAAMC,YAAY,GAAG,0CAA0C;EAC/D,MAAMC,YAAY,GAAG,0CAA0C;EAC/D,MAAMC,SAAS,GAAG,oCAAoC;EACtD,MAAMC,eAAe,GAAI,kDAAiD;EAE1Ed,SAAS,CAAC,MAAM;IACd,eAAee,SAASA,CAAA,EAAG;MACzB,MAAMC,kBAAkB,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,CACzCf,KAAK,CAACgB,IAAI,CAAE,GAAEL,SAAU,cAAaH,QAAS,kBAAiBC,YAAa,kBAAiBC,YAAa,2BAA0B,CAAC,CACtI,CAAC;MACF,MAAMO,sBAAsB,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAE,GAAEN,eAAgB,iBAAgBE,kBAAkB,CAAC,CAAC,CAAC,CAACK,IAAI,CAACC,YAAa,EAAC,CAAC;MAC5HC,OAAO,CAACC,GAAG,CAACL,sBAAsB,CAAC;IACrC;IACAJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAX,EAAA,CA9CMD,GAAG;EAAA,QAGUF,WAAW;AAAA;AAAAwB,EAAA,GAHxBtB,GAAG;AAgDT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}