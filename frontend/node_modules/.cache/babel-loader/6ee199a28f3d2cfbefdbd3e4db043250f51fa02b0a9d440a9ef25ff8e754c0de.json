{"ast":null,"code":"var _s = $RefreshSig$();\n// Importing required libraries\nconst {\n  useEffect,\n  useState\n} = require('react');\nconst {\n  MapContainer,\n  TileLayer,\n  Popup,\n  Polyline\n} = require('react-leaflet');\nconst axios = require('axios');\nconst polyline = require('@mapbox/polyline');\n\n// Defining the main function\nfunction FetchDataFromStrava() {\n  _s();\n  // Defining the Activity interface\n  const Activity = {\n    activityPositions: [],\n    activityName: '',\n    activityElevation: 0\n  };\n\n  // Initializing state for activities\n  const [activities, setActivities] = useState([]);\n\n  // Setting up API credentials\n  const clientID = 120096;\n  const clientSecret = \"bc3ec467a7464ae5be9fc7a7f6cc69f126945851\";\n  const refreshToken = \"f545ac531dd1373ffca07f31d543f2e197810468\";\n  const authLink = \"https://www.strava.com/oauth/token\";\n  const activitiesLink = `https://www.strava.com/api/v3/athlete/activities`;\n\n  // Fetching data using useEffect\n  useEffect(() => {\n    // Creating a fetchData function\n    async function fetchData() {\n      // Authenticating with Strava\n      const stravaAuthResponse = await axios.post(`${authLink}?client_id=${clientID}&client_secret=${clientSecret}&refresh_token=${refreshToken}&grant_type=refresh_token`);\n\n      // Fetching activities data\n      const stravaActivityResponse = await axios.get(`${activitiesLink}?access_token=${stravaAuthResponse.data.access_token}`);\n      console.log(stravaActivityResponse);\n\n      // Processing polyline data\n      const polylines = [];\n      for (let i = 0; i < stravaActivityResponse.data.length; i += 1) {\n        const activityPolyline = stravaActivityResponse.data[i].map.summary_polyline;\n        const activityName = stravaActivityResponse.data[i].name;\n        const activityElevation = stravaActivityResponse.data[i].total_elevation_gain;\n        polylines.push({\n          activityPositions: polyline.decode(activityPolyline),\n          activityName,\n          activityElevation\n        });\n      }\n\n      // Setting activities state\n      setActivities(polylines);\n    }\n\n    // Calling fetchData function\n    fetchData();\n  }, []);\n\n  // Rendering the map component\n  return MapContainer({\n    center: [42.585444, 13.257684],\n    zoom: 6,\n    scrollWheelZoom: true\n  }, TileLayer({\n    attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n    url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n  }),\n  // Mapping through activities to render polylines and popups\n  activities.map((activity, i) => Polyline({\n    key: i,\n    positions: activity.activityPositions\n  }, Popup(null, div(null, h2(null, `Name: ${activity.activityName}`), p(null, `Total Elevation Gain: ${activity.activityElevation}`))))));\n}\n\n// Exporting the App function\n_s(FetchDataFromStrava, \"U7cZ1/YYUxsshQ9dIjQsAX2PDAw=\");\n_c = FetchDataFromStrava;\nmodule.exports = FetchDataFromStrava;\nvar _c;\n$RefreshReg$(_c, \"FetchDataFromStrava\");","map":{"version":3,"names":["useEffect","useState","require","MapContainer","TileLayer","Popup","Polyline","axios","polyline","FetchDataFromStrava","_s","Activity","activityPositions","activityName","activityElevation","activities","setActivities","clientID","clientSecret","refreshToken","authLink","activitiesLink","fetchData","stravaAuthResponse","post","stravaActivityResponse","get","data","access_token","console","log","polylines","i","length","activityPolyline","map","summary_polyline","name","total_elevation_gain","push","decode","center","zoom","scrollWheelZoom","attribution","url","activity","key","positions","div","h2","p","_c","module","exports","$RefreshReg$"],"sources":["/Users/carlycole/personal-projects/on-track/on-track/src/components/FetchDataFromStrava.js"],"sourcesContent":["// Importing required libraries\nconst { useEffect, useState } = require('react');\nconst { MapContainer, TileLayer, Popup, Polyline } = require('react-leaflet');\nconst axios = require('axios');\nconst polyline = require('@mapbox/polyline');\n\n// Defining the main function\nfunction FetchDataFromStrava() {\n  // Defining the Activity interface\n  const Activity = {\n    activityPositions: [],\n    activityName: '',\n    activityElevation: 0\n  };\n\n  // Initializing state for activities\n  const [activities, setActivities] = useState([]);\n\n  // Setting up API credentials\n  const clientID = 120096;\n  const clientSecret = \"bc3ec467a7464ae5be9fc7a7f6cc69f126945851\";\n  const refreshToken = \"f545ac531dd1373ffca07f31d543f2e197810468\";\n  const authLink = \"https://www.strava.com/oauth/token\";\n  const activitiesLink = `https://www.strava.com/api/v3/athlete/activities`;\n\n  // Fetching data using useEffect\n  useEffect(() => {\n    // Creating a fetchData function\n    async function fetchData() {\n      // Authenticating with Strava\n      const stravaAuthResponse = await axios.post(`${authLink}?client_id=${clientID}&client_secret=${clientSecret}&refresh_token=${refreshToken}&grant_type=refresh_token`);\n      \n      // Fetching activities data\n      const stravaActivityResponse = await axios.get(`${activitiesLink}?access_token=${stravaAuthResponse.data.access_token}`);\n      console.log(stravaActivityResponse);\n\n      // Processing polyline data\n      const polylines = [];\n      for (let i = 0; i < stravaActivityResponse.data.length; i += 1) {\n        const activityPolyline = stravaActivityResponse.data[i].map.summary_polyline;\n        const activityName = stravaActivityResponse.data[i].name;\n        const activityElevation = stravaActivityResponse.data[i].total_elevation_gain;\n        polylines.push({ activityPositions: polyline.decode(activityPolyline), activityName, activityElevation });\n      }\n\n      // Setting activities state\n      setActivities(polylines);\n    }\n\n    // Calling fetchData function\n    fetchData();\n  }, []);\n\n  // Rendering the map component\n  return (\n    MapContainer({ center: [42.585444, 13.257684], zoom: 6, scrollWheelZoom: true },\n      TileLayer({\n        attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n        url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n      }),\n\n      // Mapping through activities to render polylines and popups\n      activities.map((activity, i) =>\n        Polyline({ key: i, positions: activity.activityPositions },\n          Popup(null,\n            div(null,\n              h2(null, `Name: ${activity.activityName}`),\n              p(null, `Total Elevation Gain: ${activity.activityElevation}`)\n            )\n          )\n        )\n      )\n    )\n  );\n}\n\n// Exporting the App function\nmodule.exports = FetchDataFromStrava;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}