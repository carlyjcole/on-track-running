{"ast":null,"code":"var _jsxFileName = \"/Users/carlycole/personal-projects/on-track/on-track/src/components/Stats.js\";\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stats = ({\n  activities\n}) => {\n  const calculateAveragePace = activities => {\n    if (activities.length === 0) {\n      return 0;\n    }\n    const totalPace = activities.reduce((sum, activity) => sum + activity.average_speed, 0);\n    return Math.round(totalPace / activities.length);\n  };\n  const calculateAverageHeartRate = (activities, minPace, maxPace) => {\n    const filteredActivities = activities.filter(activity => {\n      const pace = activity.average_speed; // Assuming average_speed is in m/s\n\n      return pace >= minPace && pace < maxPace;\n    });\n    if (filteredActivities.length === 0) {\n      return 0; // Default value if no activities in the pace range\n    }\n    const totalHeartRate = filteredActivities.reduce((sum, activity) => sum + activity.average_heartrate, 0);\n    return Math.round(totalHeartRate / filteredActivities.length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen\",\n    style: {\n      backgroundColor: 'rgb(255, 254, 247)',\n      padding: '2.5rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-8\",\n      children: [\"how you're doing in\", ' ', /*#__PURE__*/_jsxDEV(motion.span, {\n        initial: {\n          opacity: 0,\n          y: -50\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0,\n          transition: {\n            duration: 0.5\n          }\n        },\n        transition: {\n          type: 'spring',\n          stiffness: 200,\n          damping: 20\n        },\n        className: \"inline-block\",\n        children: new Date().getFullYear()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), activities.map(activity => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Distance: \", activity.distance, \" meters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Average Pace: \", activity.average_speed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Heart Rate: \", activity.average_heartrate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, activity.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = Stats;\nexport default Stats;\nvar _c;\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"names":["React","motion","jsxDEV","_jsxDEV","Stats","activities","calculateAveragePace","length","totalPace","reduce","sum","activity","average_speed","Math","round","calculateAverageHeartRate","minPace","maxPace","filteredActivities","filter","pace","totalHeartRate","average_heartrate","className","style","backgroundColor","padding","children","span","initial","opacity","y","animate","exit","transition","duration","type","stiffness","damping","Date","getFullYear","fileName","_jsxFileName","lineNumber","columnNumber","map","distance","id","_c","$RefreshReg$"],"sources":["/Users/carlycole/personal-projects/on-track/on-track/src/components/Stats.js"],"sourcesContent":["import React from 'react';\nimport { motion } from 'framer-motion';\n\nconst Stats = ({ activities }) => {\n\n  const calculateAveragePace = (activities) => {\n    if (activities.length === 0) {\n      return 0; \n    }\n  \n    const totalPace = activities.reduce((sum, activity) => sum + activity.average_speed, 0);\n    return Math.round(totalPace / activities.length);\n  };\n  \n\n  const calculateAverageHeartRate = (activities, minPace, maxPace) => {\n    const filteredActivities = activities.filter(activity => {\n      const pace = activity.average_speed; // Assuming average_speed is in m/s\n\n      return pace >= minPace && pace < maxPace;\n    });\n\n    if (filteredActivities.length === 0) {\n      return 0; // Default value if no activities in the pace range\n    }\n\n    const totalHeartRate = filteredActivities.reduce((sum, activity) => sum + activity.average_heartrate, 0);\n    return Math.round(totalHeartRate / filteredActivities.length);\n  };\n\n  return (\n    <div className=\"min-h-screen\" style={{backgroundColor: 'rgb(255, 254, 247)',\n    padding: '2.5rem',}}>\n      <h1 className=\"text-4xl font-bold mb-8\">\n        how you're doing in{' '}\n        <motion.span\n          initial={{ opacity: 0, y: -50 }}\n          animate={{ opacity: 1, y: 0 }}\n          exit={{ opacity: 0, transition: { duration: 0.5 } }}\n          transition={{ type: 'spring', stiffness: 200, damping: 20 }}\n          className=\"inline-block\"\n        >\n          {new Date().getFullYear()}\n        </motion.span>\n      </h1>\n      \n      {activities.map(activity => (\n          <li key={activity.id}>\n            <p>Distance: {activity.distance} meters</p>\n            <p>Average Pace: {activity.average_speed} m/s</p>\n            <p>Heart Rate: {activity.average_heartrate}</p>\n          </li>\n        ))}\n      \n    </div>\n  );\n};\n\nexport default Stats;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}