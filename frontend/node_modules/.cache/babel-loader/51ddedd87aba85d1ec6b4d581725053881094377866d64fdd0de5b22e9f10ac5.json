{"ast":null,"code":"var _jsxFileName = \"/Users/carlycole/personal-projects/on-track/on-track/src/Auth.js\",\n  _s = $RefreshSig$();\n// Auth.js\nimport React, { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = ({\n  setAccessToken\n}) => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const extractCode = () => {\n      const searchParams = new URLSearchParams(location.search);\n      const code = searchParams.get('code');\n      if (code) {\n        exchangeCodeForToken(code);\n      } else {\n        console.log('error in if code statement');\n        navigate('/error');\n      }\n    };\n    const exchangeCodeForToken = async code => {\n      try {\n        const response = await fetch('https://www.strava.com/api/v3/oauth/token', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            client_id: 120096,\n            client_secret: bc3ec467a7464ae5be9fc7a7f6cc69f126945851,\n            code,\n            grant_type: 'authorization_code'\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to exchange code for token');\n        }\n        const data = await response.json();\n        const accessToken = data.access_token;\n        setAccessToken(accessToken);\n        navigate('/');\n      } catch (error) {\n        console.error('Error exchanging code for token:', error);\n        navigate('/error');\n      }\n    };\n    extractCode();\n  }, [location.search, navigate, setAccessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Authorizing...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n};\n_s(Auth, \"fPjCxODVr6jVvib6o2c9VLE4s84=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useEffect","useLocation","useNavigate","jsxDEV","_jsxDEV","Auth","setAccessToken","_s","location","navigate","extractCode","searchParams","URLSearchParams","search","code","get","exchangeCodeForToken","console","log","response","fetch","method","headers","body","JSON","stringify","client_id","client_secret","bc3ec467a7464ae5be9fc7a7f6cc69f126945851","grant_type","ok","Error","data","json","accessToken","access_token","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carlycole/personal-projects/on-track/on-track/src/Auth.js"],"sourcesContent":["// Auth.js\nimport React, { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Auth = ({ setAccessToken }) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const extractCode = () => {\n      const searchParams = new URLSearchParams(location.search);\n      const code = searchParams.get('code');\n\n      if (code) {\n        exchangeCodeForToken(code);\n      } else {\n        console.log('error in if code statement');\n        navigate('/error');\n      }\n    };\n\n    const exchangeCodeForToken = async (code) => {\n      try {\n        const response = await fetch('https://www.strava.com/api/v3/oauth/token', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            client_id: 120096,\n            client_secret: bc3ec467a7464ae5be9fc7a7f6cc69f126945851,\n            code,\n            grant_type: 'authorization_code',\n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to exchange code for token');\n        }\n\n        const data = await response.json();\n        const accessToken = data.access_token;\n\n        setAccessToken(accessToken);\n\n        navigate('/');\n      } catch (error) {\n        console.error('Error exchanging code for token:', error);\n        navigate('/error');\n      }\n    };\n\n    extractCode();\n  }, [location.search, navigate, setAccessToken]);\n\n  return <div>Authorizing...</div>;\n};\n\nexport default Auth;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMU,WAAW,GAAGA,CAAA,KAAM;MACxB,MAAMC,YAAY,GAAG,IAAIC,eAAe,CAACJ,QAAQ,CAACK,MAAM,CAAC;MACzD,MAAMC,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC;MAErC,IAAID,IAAI,EAAE;QACRE,oBAAoB,CAACF,IAAI,CAAC;MAC5B,CAAC,MAAM;QACLG,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;QACzCT,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC;IAED,MAAMO,oBAAoB,GAAG,MAAOF,IAAI,IAAK;MAC3C,IAAI;QACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;UACxEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,SAAS,EAAE,MAAM;YACjBC,aAAa,EAAEC,wCAAwC;YACvDd,IAAI;YACJe,UAAU,EAAE;UACd,CAAC;QACH,CAAC,CAAC;QAEF,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;QACtD;QAEA,MAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACc,IAAI,CAAC,CAAC;QAClC,MAAMC,WAAW,GAAGF,IAAI,CAACG,YAAY;QAErC7B,cAAc,CAAC4B,WAAW,CAAC;QAE3BzB,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,CAAC,OAAO2B,KAAK,EAAE;QACdnB,OAAO,CAACmB,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxD3B,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC;IAEDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACF,QAAQ,CAACK,MAAM,EAAEJ,QAAQ,EAAEH,cAAc,CAAC,CAAC;EAE/C,oBAAOF,OAAA;IAAAiC,QAAA,EAAK;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAClC,CAAC;AAAClC,EAAA,CApDIF,IAAI;EAAA,QACSJ,WAAW,EACXC,WAAW;AAAA;AAAAwC,EAAA,GAFxBrC,IAAI;AAsDV,eAAeA,IAAI;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}