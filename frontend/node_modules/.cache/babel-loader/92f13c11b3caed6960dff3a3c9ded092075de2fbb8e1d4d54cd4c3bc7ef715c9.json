{"ast":null,"code":"var _jsxFileName = \"/Users/carlycole/personal-projects/on-track/on-track/src/pages/FetchDataFromStrava.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Stats from './Stats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FetchDataFromStrava = ({\n  children\n}) => {\n  _s();\n  const [activities, setActivities] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear()); // Default to the current year\n  const clientID = 120096;\n  const clientSecret = 'bc3ec467a7464ae5be9fc7a7f6cc69f126945851';\n  const refreshToken = 'f545ac531dd1373ffca07f31d543f2e197810468';\n  const auth_link = \"https://www.strava.com/oauth/token\";\n  const activities_link = \"https://www.strava.com/api/v3/athlete/activities\";\n  const perPage = 30; // Number of activities per page\n\n  useEffect(() => {\n    const fetchData = async (page = 1) => {\n      try {\n        const stravaAuthResponse = await axios.post(`${auth_link}?client_id=${clientID}&client_secret=${clientSecret}&refresh_token=${refreshToken}&grant_type=refresh_token`);\n        const accessToken = stravaAuthResponse.data.access_token;\n        const stravaActivityResponse = await axios.get(`${activities_link}?access_token=${accessToken}&page=${page}&per_page=${perPage}`);\n        const newActivities = stravaActivityResponse.data; // Assuming the activities are an array in the response\n\n        // Update state with the new activities\n        setActivities(prevActivities => [...prevActivities, ...newActivities]);\n        fetchData(page + 1);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    // Call the fetchData function to start fetching data\n    fetchData();\n  }, []); // Empty dependency array to run the effect only once on mount\n\n  // You can render the Stats component or any other component that needs the data\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [children, /*#__PURE__*/_jsxDEV(Stats, {\n      selectedYear: selectedYear,\n      activities: activities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FetchDataFromStrava, \"RhGQGncKXFaM8MgBZSAVbeVaYWg=\");\n_c = FetchDataFromStrava;\nexport default FetchDataFromStrava;\nvar _c;\n$RefreshReg$(_c, \"FetchDataFromStrava\");","map":{"version":3,"names":["React","useState","useEffect","axios","Stats","jsxDEV","_jsxDEV","Fragment","_Fragment","FetchDataFromStrava","children","_s","activities","setActivities","selectedYear","setSelectedYear","Date","getFullYear","clientID","clientSecret","refreshToken","auth_link","activities_link","perPage","fetchData","page","stravaAuthResponse","post","accessToken","data","access_token","stravaActivityResponse","get","newActivities","prevActivities","error","console","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carlycole/personal-projects/on-track/on-track/src/pages/FetchDataFromStrava.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Stats from './Stats';\n\nconst FetchDataFromStrava = ({ children }) => {\n  const [activities, setActivities] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear()); // Default to the current year\n  const clientID = 120096;\n  const clientSecret = 'bc3ec467a7464ae5be9fc7a7f6cc69f126945851';\n  const refreshToken = 'f545ac531dd1373ffca07f31d543f2e197810468';\n  const auth_link = \"https://www.strava.com/oauth/token\";\n  const activities_link = \"https://www.strava.com/api/v3/athlete/activities\";\n  const perPage = 30; // Number of activities per page\n\n  useEffect(() => {\n    const fetchData = async (page = 1) => {\n      try {\n        const stravaAuthResponse = await axios.post(`${auth_link}?client_id=${clientID}&client_secret=${clientSecret}&refresh_token=${refreshToken}&grant_type=refresh_token`);\n        const accessToken = stravaAuthResponse.data.access_token;\n\n        const stravaActivityResponse = await axios.get(`${activities_link}?access_token=${accessToken}&page=${page}&per_page=${perPage}`);\n\n        const newActivities = stravaActivityResponse.data; // Assuming the activities are an array in the response\n\n        // Update state with the new activities\n        setActivities(prevActivities => [...prevActivities, ...newActivities]);\n\n        fetchData(page + 1);\n\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    // Call the fetchData function to start fetching data\n    fetchData();\n  }, []); // Empty dependency array to run the effect only once on mount\n\n  // You can render the Stats component or any other component that needs the data\n  return (\n    <>\n      {children}\n      {/* Render other components that use the fetched data */}\n      <Stats selectedYear={selectedYear} activities={activities} />\n    </>\n  );\n};\n\nexport default FetchDataFromStrava;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAIe,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5E,MAAMC,QAAQ,GAAG,MAAM;EACvB,MAAMC,YAAY,GAAG,0CAA0C;EAC/D,MAAMC,YAAY,GAAG,0CAA0C;EAC/D,MAAMC,SAAS,GAAG,oCAAoC;EACtD,MAAMC,eAAe,GAAG,kDAAkD;EAC1E,MAAMC,OAAO,GAAG,EAAE,CAAC,CAAC;;EAEpBrB,SAAS,CAAC,MAAM;IACd,MAAMsB,SAAS,GAAG,MAAAA,CAAOC,IAAI,GAAG,CAAC,KAAK;MACpC,IAAI;QACF,MAAMC,kBAAkB,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAE,GAAEN,SAAU,cAAaH,QAAS,kBAAiBC,YAAa,kBAAiBC,YAAa,2BAA0B,CAAC;QACtK,MAAMQ,WAAW,GAAGF,kBAAkB,CAACG,IAAI,CAACC,YAAY;QAExD,MAAMC,sBAAsB,GAAG,MAAM5B,KAAK,CAAC6B,GAAG,CAAE,GAAEV,eAAgB,iBAAgBM,WAAY,SAAQH,IAAK,aAAYF,OAAQ,EAAC,CAAC;QAEjI,MAAMU,aAAa,GAAGF,sBAAsB,CAACF,IAAI,CAAC,CAAC;;QAEnD;QACAhB,aAAa,CAACqB,cAAc,IAAI,CAAC,GAAGA,cAAc,EAAE,GAAGD,aAAa,CAAC,CAAC;QAEtET,SAAS,CAACC,IAAI,GAAG,CAAC,CAAC;MAErB,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;;IAED;IACAX,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,oBACElB,OAAA,CAAAE,SAAA;IAAAE,QAAA,GACGA,QAAQ,eAETJ,OAAA,CAACF,KAAK;MAACU,YAAY,EAAEA,YAAa;MAACF,UAAU,EAAEA;IAAW;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC7D,CAAC;AAEP,CAAC;AAAC7B,EAAA,CA1CIF,mBAAmB;AAAAgC,EAAA,GAAnBhC,mBAAmB;AA4CzB,eAAeA,mBAAmB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}