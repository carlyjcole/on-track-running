{"ast":null,"code":"var _jsxFileName = \"/Users/carlycole/personal-projects/on-track/on-track/src/components/FetchDataFromStrava.js\",\n  _s = $RefreshSig$();\n// FetchDataFromStrava.js\nimport React, { useState, useEffect } from 'react';\nimport Stats from './Stats';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchDataFromStrava = () => {\n  _s();\n  console.log(\"fetching\");\n  const [activities, setActivities] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const clientID = 120096;\n  const clientSecret = 'bc3ec467a7464ae5be9fc7a7f6cc69f126945851';\n  const refreshToken = 'f545ac531dd1373ffca07f31d543f2e197810468';\n  const auth_link = \"https://www.strava.com/oauth/token\";\n  const activities_link = \"https://www.strava.com/api/v3/athlete/activities\";\n  const perPage = 200;\n  let i = 1;\n  const formattedActivities = stravaActivityResponse.data.map(activity => {\n    return {\n      activityPositions: polyline.decode(activity.map.summary_polyline),\n      activityName: activity.name,\n      activityElevation: activity.total_elevation_gain,\n      distance: activity.distance / 1609.34,\n      // Convert meters to miles\n      pace: calculatePace(activity.moving_time, activity.distance),\n      averageHeartRate: activity.average_heartrate,\n      averageSpeed: calculateSpeed(activity.moving_time, activity.distance)\n    };\n  });\n  useEffect(() => {\n    const delay = ms => new Promise(res => setTimeout(res, ms));\n    const fetchData = async (page = 1) => {\n      try {\n        const stravaAuthResponse = await axios.post(`${auth_link}?client_id=${clientID}&client_secret=${clientSecret}&refresh_token=${refreshToken}&grant_type=refresh_token`);\n        const accessToken = stravaAuthResponse.data.access_token;\n        const stravaActivityResponse = await axios.get(`${activities_link}?access_token=${accessToken}&page=${page}&per_page=${perPage}`);\n        const newActivities = stravaActivityResponse.data;\n        console.log(\"Strava API Response:\", stravaActivityResponse.data);\n        newActivities.forEach(activity => {\n          console.log(\"Average Heartrate:\", activity.average_heartrate);\n          console.log(\"Average Speed:\", activity.average_speed);\n          console.log(\"Distance:\", activity.distance);\n          console.log(\"Start Date:\", activity.start_date);\n          console.log(\"-------------------------\");\n        });\n        setActivities(prevActivities => [...prevActivities, ...newActivities]);\n        if (newActivities.length === perPage) {\n          fetchData(page + 1);\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 429) {\n          const waitTime = Math.pow(2, i) * 1000;\n          console.log(`Rate limited. Retrying in ${waitTime / 1000} seconds...`);\n          await delay(waitTime);\n          i++;\n          fetchData(page);\n        } else {\n          console.error('Error fetching data:', error);\n        }\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Stats, {\n      year: selectedYear,\n      activities: activities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n};\n_s(FetchDataFromStrava, \"RhGQGncKXFaM8MgBZSAVbeVaYWg=\");\n_c = FetchDataFromStrava;\nexport default FetchDataFromStrava;\nvar _c;\n$RefreshReg$(_c, \"FetchDataFromStrava\");","map":{"version":3,"names":["React","useState","useEffect","Stats","axios","jsxDEV","_jsxDEV","FetchDataFromStrava","_s","console","log","activities","setActivities","selectedYear","setSelectedYear","Date","getFullYear","clientID","clientSecret","refreshToken","auth_link","activities_link","perPage","i","formattedActivities","stravaActivityResponse","data","map","activity","activityPositions","polyline","decode","summary_polyline","activityName","name","activityElevation","total_elevation_gain","distance","pace","calculatePace","moving_time","averageHeartRate","average_heartrate","averageSpeed","calculateSpeed","delay","ms","Promise","res","setTimeout","fetchData","page","stravaAuthResponse","post","accessToken","access_token","get","newActivities","forEach","average_speed","start_date","prevActivities","length","error","response","status","waitTime","Math","pow","children","year","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carlycole/personal-projects/on-track/on-track/src/components/FetchDataFromStrava.js"],"sourcesContent":["// FetchDataFromStrava.js\nimport React, { useState, useEffect } from 'react';\nimport Stats from './Stats'\nimport axios from 'axios';\n\nconst FetchDataFromStrava = () => {\n  console.log(\"fetching\"); \n  const [activities, setActivities] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear()); \n  const clientID = 120096;\n  const clientSecret = 'bc3ec467a7464ae5be9fc7a7f6cc69f126945851';\n  const refreshToken = 'f545ac531dd1373ffca07f31d543f2e197810468';\n  const auth_link = \"https://www.strava.com/oauth/token\";\n  const activities_link = \"https://www.strava.com/api/v3/athlete/activities\";\n  const perPage = 200; \n  let i = 1; \n\n  const formattedActivities = stravaActivityResponse.data.map(activity => {\n    return {\n      activityPositions: polyline.decode(activity.map.summary_polyline),\n      activityName: activity.name,\n      activityElevation: activity.total_elevation_gain,\n      distance: activity.distance / 1609.34, // Convert meters to miles\n      pace: calculatePace(activity.moving_time, activity.distance),\n      averageHeartRate: activity.average_heartrate,\n      averageSpeed: calculateSpeed(activity.moving_time, activity.distance),\n    };\n  });\n\n  useEffect(() => {\n\n    const delay = (ms) => new Promise(res => setTimeout(res, ms));\n\n    const fetchData = async (page = 1) => {\n      try {\n        const stravaAuthResponse = await axios.post(`${auth_link}?client_id=${clientID}&client_secret=${clientSecret}&refresh_token=${refreshToken}&grant_type=refresh_token`);\n        const accessToken = stravaAuthResponse.data.access_token;\n        const stravaActivityResponse = await axios.get(`${activities_link}?access_token=${accessToken}&page=${page}&per_page=${perPage}`);\n        const newActivities = stravaActivityResponse.data;\n\n        console.log(\"Strava API Response:\", stravaActivityResponse.data);\n\n        newActivities.forEach(activity => {\n          console.log(\"Average Heartrate:\", activity.average_heartrate);\n          console.log(\"Average Speed:\", activity.average_speed);\n          console.log(\"Distance:\", activity.distance);\n          console.log(\"Start Date:\", activity.start_date);\n          console.log(\"-------------------------\");\n        });\n\n        setActivities(prevActivities => [...prevActivities, ...newActivities]);\n\n        if (newActivities.length === perPage) {\n          fetchData(page + 1);\n        }\n\n      } catch (error) {\n        if (error.response && error.response.status === 429) {\n          const waitTime = Math.pow(2, i) * 1000; \n          console.log(`Rate limited. Retrying in ${waitTime / 1000} seconds...`);\n          await delay(waitTime);\n          i++; \n          fetchData(page);\n        } else {\n          console.error('Error fetching data:', error);\n        }\n      }\n    };\n    fetchData();\n  }, []); \n\n  return (\n      <div>\n        <Stats year={selectedYear} activities={activities} />\n      </div>\n    );\n};\n\nexport default FetchDataFromStrava;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}