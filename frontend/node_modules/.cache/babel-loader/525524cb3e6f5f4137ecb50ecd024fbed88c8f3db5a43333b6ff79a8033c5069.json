{"ast":null,"code":"var _jsxFileName = \"/Users/carlycole/personal-projects/on-track/on-track/src/Auth.js\",\n  _s = $RefreshSig$();\n// Auth.js\nimport React, { useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = ({\n  setAccessToken\n}) => {\n  _s();\n  const location = useLocation();\n  const history = useHistory();\n  useEffect(() => {\n    // Function to extract the authorization code from the URL\n    const extractCode = () => {\n      const searchParams = new URLSearchParams(location.search);\n      const code = searchParams.get('code');\n      if (code) {\n        // Call a function to exchange the code for an access token\n        exchangeCodeForToken(code);\n      } else {\n        // Handle error or redirect user to the authorization URL\n        history.push('/error');\n      }\n    };\n\n    // Function to exchange the authorization code for an access token\n    const exchangeCodeForToken = async code => {\n      try {\n        // Make a POST request to the token endpoint to exchange the code\n        const response = await fetch('https://www.strava.com/api/v3/oauth/token', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            client_id: 'YOUR_CLIENT_ID',\n            client_secret: 'YOUR_CLIENT_SECRET',\n            code,\n            grant_type: 'authorization_code'\n          })\n        });\n\n        // Parse the response and extract the access token\n        const data = await response.json();\n        const accessToken = data.access_token;\n\n        // Update the access token in the parent component\n        setAccessToken(accessToken);\n\n        // Redirect the user to the home page or another route\n        history.push('/');\n      } catch (error) {\n        console.error('Error exchanging code for token:', error);\n        history.push('/error');\n      }\n    };\n\n    // Call the extractCode function when the component mounts\n    extractCode();\n  }, [location.search, history, setAccessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Authorizing...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n_s(Auth, \"TJ1lspO1rEHgfCYB2d0Q9QehGAc=\", false, function () {\n  return [useLocation, useHistory];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useEffect","useLocation","useHistory","jsxDEV","_jsxDEV","Auth","setAccessToken","_s","location","history","extractCode","searchParams","URLSearchParams","search","code","get","exchangeCodeForToken","push","response","fetch","method","headers","body","JSON","stringify","client_id","client_secret","grant_type","data","json","accessToken","access_token","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carlycole/personal-projects/on-track/on-track/src/Auth.js"],"sourcesContent":["// Auth.js\nimport React, { useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nconst Auth = ({ setAccessToken }) => {\n  const location = useLocation();\n  const history = useHistory();\n\n  useEffect(() => {\n    // Function to extract the authorization code from the URL\n    const extractCode = () => {\n      const searchParams = new URLSearchParams(location.search);\n      const code = searchParams.get('code');\n      if (code) {\n        // Call a function to exchange the code for an access token\n        exchangeCodeForToken(code);\n      } else {\n        // Handle error or redirect user to the authorization URL\n        history.push('/error');\n      }\n    };\n\n    // Function to exchange the authorization code for an access token\n    const exchangeCodeForToken = async (code) => {\n      try {\n        // Make a POST request to the token endpoint to exchange the code\n        const response = await fetch('https://www.strava.com/api/v3/oauth/token', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            client_id: 'YOUR_CLIENT_ID',\n            client_secret: 'YOUR_CLIENT_SECRET',\n            code,\n            grant_type: 'authorization_code',\n          }),\n        });\n\n        // Parse the response and extract the access token\n        const data = await response.json();\n        const accessToken = data.access_token;\n\n        // Update the access token in the parent component\n        setAccessToken(accessToken);\n\n        // Redirect the user to the home page or another route\n        history.push('/');\n      } catch (error) {\n        console.error('Error exchanging code for token:', error);\n        history.push('/error');\n      }\n    };\n\n    // Call the extractCode function when the component mounts\n    extractCode();\n  }, [location.search, history, setAccessToken]);\n\n  return <div>Authorizing...</div>;\n};\n\nexport default Auth;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,OAAO,GAAGP,UAAU,CAAC,CAAC;EAE5BF,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,WAAW,GAAGA,CAAA,KAAM;MACxB,MAAMC,YAAY,GAAG,IAAIC,eAAe,CAACJ,QAAQ,CAACK,MAAM,CAAC;MACzD,MAAMC,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC;MACrC,IAAID,IAAI,EAAE;QACR;QACAE,oBAAoB,CAACF,IAAI,CAAC;MAC5B,CAAC,MAAM;QACL;QACAL,OAAO,CAACQ,IAAI,CAAC,QAAQ,CAAC;MACxB;IACF,CAAC;;IAED;IACA,MAAMD,oBAAoB,GAAG,MAAOF,IAAI,IAAK;MAC3C,IAAI;QACF;QACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;UACxEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,SAAS,EAAE,gBAAgB;YAC3BC,aAAa,EAAE,oBAAoB;YACnCZ,IAAI;YACJa,UAAU,EAAE;UACd,CAAC;QACH,CAAC,CAAC;;QAEF;QACA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QAClC,MAAMC,WAAW,GAAGF,IAAI,CAACG,YAAY;;QAErC;QACAzB,cAAc,CAACwB,WAAW,CAAC;;QAE3B;QACArB,OAAO,CAACQ,IAAI,CAAC,GAAG,CAAC;MACnB,CAAC,CAAC,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxDvB,OAAO,CAACQ,IAAI,CAAC,QAAQ,CAAC;MACxB;IACF,CAAC;;IAED;IACAP,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACF,QAAQ,CAACK,MAAM,EAAEJ,OAAO,EAAEH,cAAc,CAAC,CAAC;EAE9C,oBAAOF,OAAA;IAAA8B,QAAA,EAAK;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAClC,CAAC;AAAC/B,EAAA,CAvDIF,IAAI;EAAA,QACSJ,WAAW,EACZC,UAAU;AAAA;AAAAqC,EAAA,GAFtBlC,IAAI;AAyDV,eAAeA,IAAI;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}