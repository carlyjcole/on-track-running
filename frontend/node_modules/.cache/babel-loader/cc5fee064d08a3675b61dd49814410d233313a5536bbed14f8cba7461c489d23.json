{"ast":null,"code":"var _jsxFileName = \"/Users/carlycole/personal-projects/on-track/on-track/src/components/FetchDataFromStrava.js\",\n  _s = $RefreshSig$();\n// FetchDataFromStrava.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchDataFromStrava = ({\n  children\n}) => {\n  _s();\n  console.log(\"fetching\");\n  const [activities, setActivities] = useState([]);\n  const clientID = 120096;\n  const clientSecret = 'bc3ec467a7464ae5be9fc7a7f6cc69f126945851';\n  const refreshToken = 'f545ac531dd1373ffca07f31d543f2e197810468';\n  const auth_link = \"https://www.strava.com/oauth/token\";\n  const activities_link = \"https://www.strava.com/api/v3/athlete/activities\";\n  const perPage = 30; // Number of activities per page\n\n  useEffect(() => {\n    const fetchData = async (page = 1) => {\n      try {\n        const stravaAuthResponse = await axios.post(`${auth_link}?client_id=${clientID}&client_secret=${clientSecret}&refresh_token=${refreshToken}&grant_type=refresh_token`);\n        const accessToken = stravaAuthResponse.data.access_token;\n        const stravaActivityResponse = await axios.get(`${activities_link}?access_token=${accessToken}&page=${page}&per_page=${perPage}`);\n        const newActivities = stravaActivityResponse.data;\n        setActivities(prevActivities => [...prevActivities, ...newActivities]);\n        if (newActivities.length === perPage) {\n          fetchData(page + 1);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [activities]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Strava Activities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: activities.map(activity => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Distance: \", activity.distance, \" meters\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Average Pace: \", activity.average_speed, \" m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Heart Rate: \", activity.average_heartrate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, activity.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n};\n_s(FetchDataFromStrava, \"U7cZ1/YYUxsshQ9dIjQsAX2PDAw=\");\n_c = FetchDataFromStrava;\nexport default FetchDataFromStrava;\nvar _c;\n$RefreshReg$(_c, \"FetchDataFromStrava\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","FetchDataFromStrava","children","_s","console","log","activities","setActivities","clientID","clientSecret","refreshToken","auth_link","activities_link","perPage","fetchData","page","stravaAuthResponse","post","accessToken","data","access_token","stravaActivityResponse","get","newActivities","prevActivities","length","error","fileName","_jsxFileName","lineNumber","columnNumber","map","activity","distance","average_speed","average_heartrate","id","_c","$RefreshReg$"],"sources":["/Users/carlycole/personal-projects/on-track/on-track/src/components/FetchDataFromStrava.js"],"sourcesContent":["// FetchDataFromStrava.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst FetchDataFromStrava = ({ children }) => {\n  console.log(\"fetching\"); \n  const [activities, setActivities] = useState([]);\n  const clientID = 120096;\n  const clientSecret = 'bc3ec467a7464ae5be9fc7a7f6cc69f126945851';\n  const refreshToken = 'f545ac531dd1373ffca07f31d543f2e197810468';\n  const auth_link = \"https://www.strava.com/oauth/token\";\n  const activities_link = \"https://www.strava.com/api/v3/athlete/activities\";\n  const perPage = 30; // Number of activities per page\n\n  useEffect(() => {\n    const fetchData = async (page = 1) => {\n      try {\n        const stravaAuthResponse = await axios.post(`${auth_link}?client_id=${clientID}&client_secret=${clientSecret}&refresh_token=${refreshToken}&grant_type=refresh_token`);\n        const accessToken = stravaAuthResponse.data.access_token;\n        const stravaActivityResponse = await axios.get(`${activities_link}?access_token=${accessToken}&page=${page}&per_page=${perPage}`);\n        const newActivities = stravaActivityResponse.data;\n\n        setActivities(prevActivities => [...prevActivities, ...newActivities]);\n\n        if (newActivities.length === perPage) {\n          fetchData(page + 1);\n        }\n\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [activities]); \n\n  return (\n      <div>\n        <h1>Strava Activities</h1>\n        <ul>\n          {activities.map(activity => (\n            <li key={activity.id}>\n              <p>Distance: {activity.distance} meters</p>\n              <p>Average Pace: {activity.average_speed} m/s</p>\n              <p>Heart Rate: {activity.average_heartrate}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n};\n\nexport default FetchDataFromStrava;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}