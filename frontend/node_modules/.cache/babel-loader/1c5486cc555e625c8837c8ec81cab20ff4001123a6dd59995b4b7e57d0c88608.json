{"ast":null,"code":"import React, { useState, useEffect, Fragment } from 'react';\nimport Stats from '../pages/Stats';\nimport axios from 'axios';\nimport { Dialog, Transition } from '@headlessui/react';\n\n// const FetchDataFromStrava = () => {\n//   console.log(\"fetching\"); \n//   const [activities, setActivities] = useState([]);\n//   const [selectedYear] = useState(new Date().getFullYear()); \n//   let [isOpen, setIsOpen] = useState(false); \n\n//   function closeModal() {\n//     setIsOpen(false)\n//   }\n\n//   function openModal() {\n//     setIsOpen(true)\n//   }\n\n//   const authorizeWithStrava = async () => {\n//     // const response = await axios.post('http://localhost:4000/strava/auth');\n//     closeModal(); \n//     console.log(\"authorization\"); \n//   };\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:4000/strava/activities');\n//         const newActivities = response.data.activities;\n\n//         console.log(\"Strava API Response:\", newActivities);\n\n//         setActivities(prevActivities => [...prevActivities, ...newActivities]);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//         openModal(); \n//       }\n//     };\n\n//     fetchData();\n//   }, []); \n\n//   return (\n//       <div>\n//         <div className=\"fixed inset-0 flex items-center justify-center\" style={{ pointerEvents: 'none' }}>\n\n//         <Transition appear show={isOpen} as={Fragment}>\n//           <Dialog as=\"div\" className=\"relative z-10\" onClose={closeModal}>\n//             <Transition.Child\n//               as={Fragment}\n//               enter=\"ease-out duration-300\"\n//               enterFrom=\"opacity-0\"\n//               enterTo=\"opacity-100\"\n//               leave=\"ease-in duration-200\"\n//               leaveFrom=\"opacity-100\"\n//               leaveTo=\"opacity-0\"\n//             >\n//               <div className=\"fixed inset-0 bg-black/25\" />\n//             </Transition.Child>\n\n//               <div className=\"fixed inset-0 overflow-y-auto\">\n//                 <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n//                   <Transition.Child\n//                     as={Fragment}\n//                     enter=\"ease-out duration-300\"\n//                     enterFrom=\"opacity-0 scale-95\"\n//                     enterTo=\"opacity-100 scale-100\"\n//                     leave=\"ease-in duration-200\"\n//                     leaveFrom=\"opacity-100 scale-100\"\n//                     leaveTo=\"opacity-0 scale-95\"\n//                   >\n//                     <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all\">\n//                       <Dialog.Title\n//                         as=\"h3\"\n//                         className=\"text-lg font-medium leading-6 text-gray-900\"\n//                       >\n//                         uh oh!\n//                       </Dialog.Title>\n//                       <div className=\"mt-2\">\n//                         <p className=\"text-sm text-gray-500\">\n//                           you'll need to give us permission to use your data from strava.\n//                         </p>\n//                       </div>\n\n//                       <div className=\"mt-4\">\n//                         <button\n//                           type=\"button\"\n//                           className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-100 px-4 py-2 text-sm font-medium text-blue-900 hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2\"\n//                           onClick={authorizeWithStrava}>\n//                           let's go\n//                         </button>\n//                       </div>\n//                     </Dialog.Panel>\n//                   </Transition.Child>\n//                 </div>\n//               </div>\n//             </Dialog>\n//             </Transition>\n//             </div>\n//           <Stats year={selectedYear} activities={activities} />\n//         </div>\n//     );\n// };\n\n// export default FetchDataFromStrava;","map":{"version":3,"names":["React","useState","useEffect","Fragment","Stats","axios","Dialog","Transition"],"sources":["/Users/carlycole/personal-projects/on-track/frontend/src/components/FetchDataFromStrava.js"],"sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport Stats from '../pages/Stats'\nimport axios from 'axios';\nimport { Dialog, Transition } from '@headlessui/react'; \n\n// const FetchDataFromStrava = () => {\n//   console.log(\"fetching\"); \n//   const [activities, setActivities] = useState([]);\n//   const [selectedYear] = useState(new Date().getFullYear()); \n//   let [isOpen, setIsOpen] = useState(false); \n\n//   function closeModal() {\n//     setIsOpen(false)\n//   }\n\n//   function openModal() {\n//     setIsOpen(true)\n//   }\n\n//   const authorizeWithStrava = async () => {\n//     // const response = await axios.post('http://localhost:4000/strava/auth');\n//     closeModal(); \n//     console.log(\"authorization\"); \n//   };\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:4000/strava/activities');\n//         const newActivities = response.data.activities;\n\n//         console.log(\"Strava API Response:\", newActivities);\n\n//         setActivities(prevActivities => [...prevActivities, ...newActivities]);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//         openModal(); \n//       }\n//     };\n\n//     fetchData();\n//   }, []); \n  \n//   return (\n//       <div>\n//         <div className=\"fixed inset-0 flex items-center justify-center\" style={{ pointerEvents: 'none' }}>\n\n//         <Transition appear show={isOpen} as={Fragment}>\n//           <Dialog as=\"div\" className=\"relative z-10\" onClose={closeModal}>\n//             <Transition.Child\n//               as={Fragment}\n//               enter=\"ease-out duration-300\"\n//               enterFrom=\"opacity-0\"\n//               enterTo=\"opacity-100\"\n//               leave=\"ease-in duration-200\"\n//               leaveFrom=\"opacity-100\"\n//               leaveTo=\"opacity-0\"\n//             >\n//               <div className=\"fixed inset-0 bg-black/25\" />\n//             </Transition.Child>\n\n//               <div className=\"fixed inset-0 overflow-y-auto\">\n//                 <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n//                   <Transition.Child\n//                     as={Fragment}\n//                     enter=\"ease-out duration-300\"\n//                     enterFrom=\"opacity-0 scale-95\"\n//                     enterTo=\"opacity-100 scale-100\"\n//                     leave=\"ease-in duration-200\"\n//                     leaveFrom=\"opacity-100 scale-100\"\n//                     leaveTo=\"opacity-0 scale-95\"\n//                   >\n//                     <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all\">\n//                       <Dialog.Title\n//                         as=\"h3\"\n//                         className=\"text-lg font-medium leading-6 text-gray-900\"\n//                       >\n//                         uh oh!\n//                       </Dialog.Title>\n//                       <div className=\"mt-2\">\n//                         <p className=\"text-sm text-gray-500\">\n//                           you'll need to give us permission to use your data from strava.\n//                         </p>\n//                       </div>\n\n//                       <div className=\"mt-4\">\n//                         <button\n//                           type=\"button\"\n//                           className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-100 px-4 py-2 text-sm font-medium text-blue-900 hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2\"\n//                           onClick={authorizeWithStrava}>\n//                           let's go\n//                         </button>\n//                       </div>\n//                     </Dialog.Panel>\n//                   </Transition.Child>\n//                 </div>\n//               </div>\n//             </Dialog>\n//             </Transition>\n//             </div>\n//           <Stats year={selectedYear} activities={activities} />\n//         </div>\n//     );\n// };\n\n// export default FetchDataFromStrava;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC5D,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,UAAU,QAAQ,mBAAmB;;AAEtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}