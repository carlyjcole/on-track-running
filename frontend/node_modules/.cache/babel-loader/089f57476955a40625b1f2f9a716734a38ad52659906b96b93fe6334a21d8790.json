{"ast":null,"code":"var _jsxFileName = \"/Users/carlycole/personal-projects/on-track/on-track/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [accessToken, setAccessToken] = useState('');\n  const [yearlyMiles, setYearlyMiles] = useState({});\n  const clientID = 120096;\n  const clientSecret = 'bc3ec467a7464ae5be9fc7a7f6cc69f126945851';\n  const refreshToken = 'f545ac531dd1373ffca07f31d543f2e197810468';\n  const auth_link = \"https://www.strava.com/oauth/token\";\n  const activities_link = `https://www.strava.com/api/v3/athlete/activities`;\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const stravaAuthResponse = await axios.post(`${auth_link}?client_id=${clientID}&client_secret=${clientSecret}&refresh_token=${refreshToken}&grant_type=refresh_token`);\n        let allActivities = [];\n        let page = 1;\n        do {\n          // Fetch activities for the current page with 30 results per page\n          const stravaActivityResponse = await axios.get(`${activities_link}?access_token=${stravaAuthResponse.data.access_token}&page=${page}`);\n\n          // Add fetched activities to the overall list\n          allActivities = allActivities.concat(stravaActivityResponse.data);\n\n          // Check if there are more pages\n          if (stravaActivityResponse.headers.link && stravaActivityResponse.headers.link.includes('rel=\"next\"')) {\n            page++;\n          } else {\n            break; // Exit the loop if there are no more pages\n          }\n        } while (true);\n\n        // Calculate yearly miles from all activities\n        const yearlyMilesData = allActivities.reduce((acc, activity) => {\n          const activityDate = new Date(activity.start_date_local);\n          const year = activityDate.getFullYear();\n          const distanceMeters = activity.distance;\n          const distanceMiles = distanceMeters / 1609.34;\n          acc[year] = (acc[year] || 0) + distanceMiles;\n          return acc;\n        }, {});\n        setYearlyMiles(yearlyMilesData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Yearly Miles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(yearlyMiles).map(([year, miles]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [year, \": \", miles.toFixed(2), \" miles\"]\n      }, year, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HtuSjnwJyDocaRvcmahPslRooCs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","accessToken","setAccessToken","yearlyMiles","setYearlyMiles","clientID","clientSecret","refreshToken","auth_link","activities_link","fetchData","stravaAuthResponse","post","allActivities","page","stravaActivityResponse","get","data","access_token","concat","headers","link","includes","yearlyMilesData","reduce","acc","activity","activityDate","Date","start_date_local","year","getFullYear","distanceMeters","distance","distanceMiles","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","miles","toFixed","_c","$RefreshReg$"],"sources":["/Users/carlycole/personal-projects/on-track/on-track/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const [accessToken, setAccessToken] = useState('');\n  const [yearlyMiles, setYearlyMiles] = useState({});\n  const clientID = 120096;\n  const clientSecret = 'bc3ec467a7464ae5be9fc7a7f6cc69f126945851';\n  const refreshToken = 'f545ac531dd1373ffca07f31d543f2e197810468'; \n  const auth_link = \"https://www.strava.com/oauth/token\"\n  const activities_link = `https://www.strava.com/api/v3/athlete/activities`\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const stravaAuthResponse = await axios.post(`${auth_link}?client_id=${clientID}&client_secret=${clientSecret}&refresh_token=${refreshToken}&grant_type=refresh_token`);\n\n        let allActivities = [];\n        let page = 1;\n\n        do {\n          // Fetch activities for the current page with 30 results per page\n          const stravaActivityResponse = await axios.get(`${activities_link}?access_token=${stravaAuthResponse.data.access_token}&page=${page}`);\n\n          // Add fetched activities to the overall list\n          allActivities = allActivities.concat(stravaActivityResponse.data);\n\n          // Check if there are more pages\n          if (stravaActivityResponse.headers.link && stravaActivityResponse.headers.link.includes('rel=\"next\"')) {\n            page++;\n          } else {\n            break; // Exit the loop if there are no more pages\n          }\n        } while (true);\n\n        // Calculate yearly miles from all activities\n        const yearlyMilesData = allActivities.reduce((acc, activity) => {\n          const activityDate = new Date(activity.start_date_local);\n          const year = activityDate.getFullYear();\n          const distanceMeters = activity.distance;\n          const distanceMiles = distanceMeters / 1609.34;\n\n          acc[year] = (acc[year] || 0) + distanceMiles;\n\n          return acc;\n        }, {});\n\n        setYearlyMiles(yearlyMilesData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h2>Yearly Miles</h2>\n      <ul>\n        {Object.entries(yearlyMiles).map(([year, miles]) => (\n          <li key={year}>{year}: {miles.toFixed(2)} miles</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}